import java.math.BigInteger;
import java.security.SecureRandom;


/**
 * RSA class for implementing the RSA decryption algorithm
 *
 * @author	Jesse Roux (jar4899)
 */
public class RSADecrypter {
	// Private key and modulus
	BigInteger d, n;

	/**
	 * Creates a new RSADecrypter instance. `d` and `n` are the private key
	 * and modulus (respectively)
	 */
	public RSADecrypter(BigInteger d, BigInteger n) {
		this.d = d;
		this.n = n;
	}

	/**
	 * Decrypts ciphertext and returns the plaintext message
	 */
	public String decrypt(byte[] ciphertext) {
		OAEP decoder = new OAEP();

		BigInteger c = new BigInteger(ciphertext);
		BigInteger m = c.modPow(d, n);

		return decoder.decode(m);
	}
}