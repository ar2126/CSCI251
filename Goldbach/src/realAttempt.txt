/**
 * Created by aidan_000 on 2/21/2018.
 */
import edu.rit.pj2.Task;
import edu.rit.pj2.Loop;
import edu.rit.pj2.vbl.IntVbl;
import java.math.BigInteger;

public class Goldbach extends Task{
    int n = 0;
    IntVbl count;
    public void main(final String[] args) throws Exception{
        try{
            n = Integer.parseInt(args[0]);
        }catch (NumberFormatException e){
            System.out.println("Error: Required arguments not an int");
            System.exit(0);
        }

        if(n <= 4 || n % 2 != 0){
            System.out.println("Error: n must be greater than 4 and even");
            System.exit(0);
        }

        else{
            int x = 3;
            count = new IntVbl.Sum(0);
            parallelFor(x, n/2) .exec(new Loop()
            {
                int y = n-x;
                BigInteger prim1 = new BigInteger(Integer.toString(x));
                BigInteger prim2 = new BigInteger(Integer.toString(y));
                IntVbl thrSum;
                public void start(){
                    thrSum = threadLocal(count);
                }

                public void run(int i){
                    if(prim1.isProbablePrime(64) && prim2.isProbablePrime(64)){
                        System.out.print(n + "=" + x + "+" + y+"\n");
                        thrSum.item += 1;
                    }
                }
            });
            System.out.print(count.item + " solutions\n");
        }
    }

}
